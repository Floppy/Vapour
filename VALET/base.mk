##========---
##=- VALET
##=====---
# Vapour Technology All-Purpose Library
# Copyright 2001 Vapour Technology Ltd.
#
# Add confidentiality notice

# NOTE: Will eventually be generated by VMake

# 23/09/2001 - Warren Moore
# $Id: base.mk,v 1.4 2001/10/21 14:22:27 vap-warren Exp $

# common defines
VAPOUR_BASE = $(HOME)/src/Vapour
VAPOUR_INC = $(VAPOUR_BASE)/include
VAPOUR_LIB = $(VAPOUR_BASE)/lib

# Valet specific - to be removed later
INC_PREFIX = /VALET
ARCH = noarch

ifneq "$(ARCH)" "dc"
##===--- noarch
MAKE = make
CC = gcc
CFLAGS = -g -O -Wall -I$(VAPOUR_INC)
CXX = g++
CXXFLAGS = 
AR = ar
ARFLAGS = rcs
RANLIB = ranlib
LD = ld
LDFLAGS = -L$(VAPOUR_LIB)

else
##===--- dc
MAKE = make
CC = $(KOS_CC)
CFLAGS = $(KOS_CFLAGS) -D_arch_$(KOS_ARCH) -I$(VAPOUR_INC) -I$(KOS_INCS) -I$(KOS_BASE)/kernel/arch/$(KOS_ARCH)/include
CXX = $(KOS_CCPLUS)
CXXFLAGS = $(KOS_CPPFLAGS)
AR = $(KOS_AR)
ARFLAGS = rcs
RANLIB = /usr/local/dc/sh-elf/bin/sh-elf-ranlib
LD = $(KOS_LD)
LDFLAGS = $(KOS_LDFLAGS) -L$(VAPOUR_LIB) $(KOS_BASE)/kernel/arch/$(KOS_ARCH)/kernel/startup.o -L$(KOS_BASE)/lib 

TEST_LIBS += -lkallisti -lgcc

endif

.PHONY: all build test clean distclean

# Targets

all: build

build: prebuild $(LIB) postbuild

prebuild: $(INC_HEADERS)
	mkdir -p $(VAPOUR_INC)$(INC_PREFIX) 2> /dev/null ; \
	cp $(INC_HEADERS) $(VAPOUR_INC)$(INC_PREFIX)

postbuild: $(LIB)
	mkdir -p $(VAPOUR_LIB) 2> /dev/null ; \
	cp $(LIB) $(VAPOUR_LIB)
	
$(LIB): $(OBJS)
	$(RANLIB) $(LIB)

clean:
	rm -rf $(LIB) $(CLEAN_FILES) *.o *~
	
distclean: clean
	rm -rf $(VMAKE_FILES)

# Production rules
	
.cpp.o:
	$(CXX) $(CFLAGS) $(CXXFLAGS) -c $<

.cpp.a:
	$(CXX) $(CFLAGS) $(CXXFLAGS) -c $<
	$(AR) $(ARFLAGS) $@ $%

# Default

.DEFAULT:
	@echo Unknown target: $@

