! author="Warren Moore"
: Extensions and Improvements

<UL>
<LI><B>Speed</B><BR>
Given that Automation is the Windows system that allows different languages such as C++, Visual Basic and
Delphi to inter-operate, rigid type-checking (marshalling) is performed by Windows for Automation function calls.
Cortona's Automation functions pass values individually, even for multiple value fields, and this introduces
a lot of redundant type-checking immensely slowing down VRML scenes with significant amounts of dynamic data.
<P>Use of an undocument Cortona function capable of passing an entire set of values has improved the speed
of these calls. The VRML management of scene geometry has been modified to demonstrate the speed increase.
Similar redesign of the management of crack information and stress colours would significantly improve animation speed.
<LI><B>Cortona Feedback</B><BR>
The Cortona control does provide feedback via Automation for VRML events and therefore it is be possible for the
control to react to user interactions with the VRML scene. This would allow the control to react to Cortona errors.
This feedback would remove the need of VRML touch sensors and the transmission of redundant temperature values for
display within the HUD. Also, this would allow for the retrieval of the camera position and orientation, 
for easier viewpoint selection.</LI>
<LI><B>Framebuffer Access</B><BR>
It is possible to directly retrieve and edit the image rendered by Cortona, allowing the possibility to add extra graphical
elements such as improved tool-tips, a skinnable HUD, fire effects and AVI generation of animations.</LI>
<LI><B>Navigation Control</B><BR>
It is also possible to directly control scene navigation, allowing to use of officially unsupported controllers
such as 3D-mice, 6DOF 'space-balls' or head-mounted displays.</LI>
</UL>
