! author="Warren Moore"
: ActiveX Control Overview

<P CLASS=HEADING>
Implementation Notes
</P>
<P>
The ActiveX control is an Internet aware control developed using the MFC framework.
An Automation interface is provided to allow control parameters to be set within HTML pages or
other ActiveX containers such as Visual Basic or MS Excel.
</P>
<P>
The single-threaded control is entirely event-driven i.e. functions are called in response to Windows messages indicating
mouse movements, changes in the ActiveX container state or notifications that further streaming data has arrived.
</P>
<P>
An instance of the Cortona VRML control is required in the same ActiveX container for 3D display.
Through queries to the container, the control can obtain an interface to Cortona to allow direct communication
through Cortona's Automation interface.
</P>

<P CLASS=HEADING>
Extensions &amp; Improvements
</P>
<UL>
<LI><B>Speed</B><BR>
Simulation data manipulation within the control and within Cortona a fast operations, however transfer of
data from the control to Cortona is marshalled by Microsoft's Automation engine. This external mashalling
results in a slow frame update. Through extensive use of Cortona's internal JavaScript engine it will be
possible to work around this bottleneck and dramatically improve animation speed.</LI>
<LI><B>Event Sinks</B><BR>
The Cortona control does provide event callbacks for VRML events and therefore it will be possible for the
control to react to user interactions with the VRML scene.</LI>
<LI><B>Framebuffer Access</B><BR>
It is possible to directly edit the image rendered by Cortona, allowing the possibility to add extra graphical
elements such as improved tool-tips, a skinnable HUD and fire effects.</LI>
<LI><B>Navigation Control</B><BR>
It is also possible to directly control scene navigation, allowing to use of officially unsupported controllers
such as 3D-mice or 6DOF 'space-balls'.</LI>
</UL>
